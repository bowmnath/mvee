# Recreating figures

All first eight figures from the thesis can be recreated in a straightforward
way using the provided scripts `step{0-8}.sh`.

The first script, `step0.sh`, generates most of the data and is thus somewhat slow.  We suggest running `./step0.sh` and then stepping away for 30 minutes to an hour while it computes its outputs.

The remaining scripts, `step1.sh` through `step8.sh`, generate one figure each.  Simply run, e.g., `./step1.sh` to see Figure 1.  All subplots are included automatically by the scripts, but they will be shown one at a time.

The only script that is a bit slower is `step4.sh`, which does a bit of computing as well as displaying plots.


# Recreating performance results

Another script, `step9.sh`, is used to generate the results of scaling runs. If you run for the full set of sizes in the document, it will take several hours and may go overnight. The scripts saves data as it goes, so should recover without needing to rerun everything if it gets interrupted. However, running with tmux or screen may still be advisable to prevent a remote session from closing and killing the process.

display_scaling.py -- plot results of scaling runs. Requires that all data has been generated by scaling_m_n.py first. The only variable that will need to be changed is vary_m, which will either be set to True or False depending which type of run you want to see, the one that varies m or the one that varies n. Will require X-forwarding to make plot display.
